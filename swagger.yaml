openapi: 3.0.0
info:
  title: Jobs API
  contact: {}
  version: '1.0'
servers:
  - url: https://jobs-api-pink.vercel.app/api/v1
    variables: {}
paths:
  /auth/login:
    post:
      tags:
        - users
      summary: login user
      operationId: loginuser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/loginuserrequest'
                - example:
                    email: amr231@gmail.com
                    password: amr231
            example:
              email: amr231@gmail.com
              password: amr231
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /auth/register:
    post:
      tags:
        - users
      summary: register user
      operationId: registeruser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/registeruserrequest'
                - example:
                    name: Amr
                    email: amr231@gmail.com
                    password: amr231
            example:
              name: Amr
              email: amr231@gmail.com
              password: amr231
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /auth:
    get:
      tags:
        - users
      summary: get all users
      operationId: getallusers
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /jobs:
    post:
      tags:
        - jobs
      summary: create job
      operationId: createjob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/createjobrequest'
                - example:
                    company: meta
                    position: fronendd
            example:
              company: meta
              position: fronendd
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    get:
      tags:
        - jobs
      summary: get all jobs
      operationId: getalljobs
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /jobs/{id}:
    get:
      tags:
        - jobs
      summary: get single job
      operationId: getsinglejob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    patch:
      tags:
        - jobs
      summary: update job
      operationId: updatejob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    delete:
      tags:
        - jobs
      summary: delete a job
      operationId: deleteajob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
components:
  schemas:
    loginuserrequest:
      title: loginuserrequest
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: amr231@gmail.com
        password: amr231
    registeruserrequest:
      title: registeruserrequest
      required:
        - name
        - email
        - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: Amr
        email: amr231@gmail.com
        password: amr231
    createjobrequest:
      title: createjobrequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: meta
        position: fronendd
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
  - name: users
  - name: jobs
